/*
 * SAMPLE GRID SIZES ###########################
 * Use these, or your own calculations for a fixed width grid.
 * 1200px Grid =========
 *   $cwidth: 80; $gutter: 20; $cols: 12; 
 *   $cwidth: 55; $gutter: 20; $cols: 16;
 *
 * 960px Grid =========
 *   $cwidth: 60; $gutter: 20; $cols: 12; 
 *   $cwidth: 40; $gutter: 20; $cols: 16;
 * Fluid Grid =========
 *   $cwidth: 60; $gutter: 20; $cols: 12; 
 *   $cwidth: 40; $gutter: 20; $cols: 16;
 */
body {
  width: 100%;
  min-width: 960px;
  *zoom: 1;
}
body:before, body:after {
  content: "";
  display: table;
}
body:after {
  clear: both;
}

/* 
 * Currently the argument passed here pulls the column count from the global system, or allows you to overwrite it. 
 * However, it was never used (even in original version) to do anything. ???
 * 
 * Something should be solved here to allow "overwriting" of the columns for a row.
 */
/**
 *  You have the ability to specify the default number of columns used in the grid here
 *  This recalculates the available space in a "row" so that the grid widths are standardized
 *  in the full layout.
 *  This only becomes apparent in fluid and nested layouts
 */
/* Content First push/pull effects */
/* Prefix/Suffix add padding to the left/right of an element to widen the gutter and additional column space */
#main {
  *zoom: 1;
}
#main:before, #main:after {
  content: "";
  display: table;
}
#main:after {
  clear: both;
}
#main #content-wrapper,
#main #postscript-wrapper {
  width: 960px;
  display: block;
  margin: 0 auto;
  *zoom: 1;
  margin-bottom: 1em;
}
#main #content-wrapper:before, #main #content-wrapper:after,
#main #postscript-wrapper:before,
#main #postscript-wrapper:after {
  content: "";
  display: table;
}
#main #content-wrapper:after,
#main #postscript-wrapper:after {
  clear: both;
}
#main #content {
  display: block;
  position: relative;
  /* original "working" functionality that fails in nested */
  width: 460px;
  margin: 0 10px;
  /* RTL/LTR switching */
  float: left;
  /* Debugging code to display rendered width */
  left: 480px;
}
#main #content > .inner:before {
  content: "width: 460px;";
}
#main #content > .inner .debug:after {
  content: "margin: 10px;";
}
#main #sidebar_first {
  display: block;
  position: relative;
  /* original "working" functionality that fails in nested */
  width: 220px;
  margin: 0 10px;
  /* RTL/LTR switching */
  float: left;
  /* Debugging code to display rendered width */
  right: 480px;
}
#main #sidebar_first > .inner:before {
  content: "width: 220px;";
}
#main #sidebar_first > .inner .debug:after {
  content: "margin: 10px;";
}
#main #sidebar_second {
  display: block;
  position: relative;
  /* original "working" functionality that fails in nested */
  width: 220px;
  margin: 0 10px;
  /* RTL/LTR switching */
  float: left;
  /* Debugging code to display rendered width */
  right: 480px;
}
#main #sidebar_second > .inner:before {
  content: "width: 220px;";
}
#main #sidebar_second > .inner .debug:after {
  content: "margin: 10px;";
}
#main #postscript_first {
  display: block;
  position: relative;
  /* original "working" functionality that fails in nested */
  width: 300px;
  margin: 0 10px;
  /* RTL/LTR switching */
  float: left;
  /* Debugging code to display rendered width */
  left: 640px;
}
#main #postscript_first > .inner:before {
  content: "width: 300px;";
}
#main #postscript_first > .inner .debug:after {
  content: "margin: 10px;";
}
#main #postscript_second {
  display: block;
  position: relative;
  /* original "working" functionality that fails in nested */
  width: 300px;
  margin: 0 10px;
  /* RTL/LTR switching */
  float: left;
  /* Debugging code to display rendered width */
}
#main #postscript_second > .inner:before {
  content: "width: 300px;";
}
#main #postscript_second > .inner .debug:after {
  content: "margin: 10px;";
}
#main #postscript_third {
  display: block;
  position: relative;
  /* original "working" functionality that fails in nested */
  width: 300px;
  margin: 0 10px;
  /* RTL/LTR switching */
  float: left;
  /* Debugging code to display rendered width */
  right: 640px;
}
#main #postscript_third > .inner:before {
  content: "width: 300px;";
}
#main #postscript_third > .inner .debug:after {
  content: "margin: 10px;";
}
